

  2%|‚ñç                             | 4/250 [00:02<01:37,  2.51it/s]
GrandExtendDiscritizedNet
m1.weight
torch.Size([80, 3703])
m1.bias
torch.Size([80])
m2.weight
torch.Size([6, 80])
m2.bias
torch.Size([6])
mol_list.0.alpha_train
torch.Size([])
mol_list.0.beta_train
torch.Size([])
mol_list.0.alpha_sc
torch.Size([1])
mol_list.0.beta_sc
torch.Size([1])
mol_list.0.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.0.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.0.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.0.multihead_att_layer.V.bias
torch.Size([32])
mol_list.0.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.0.multihead_att_layer.K.bias
torch.Size([32])
mol_list.0.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.0.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.1.alpha_train
torch.Size([])
mol_list.1.beta_train
torch.Size([])
mol_list.1.alpha_sc
torch.Size([1])
mol_list.1.beta_sc
torch.Size([1])
mol_list.1.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.1.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.1.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.1.multihead_att_layer.V.bias
torch.Size([32])
mol_list.1.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.1.multihead_att_layer.K.bias
torch.Size([32])
mol_list.1.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.1.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.2.alpha_train
torch.Size([])
mol_list.2.beta_train
torch.Size([])
mol_list.2.alpha_sc
torch.Size([1])
mol_list.2.beta_sc
torch.Size([1])
mol_list.2.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.2.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.2.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.2.multihead_att_layer.V.bias
torch.Size([32])
mol_list.2.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.2.multihead_att_layer.K.bias
torch.Size([32])
mol_list.2.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.2.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.3.alpha_train
torch.Size([])
mol_list.3.beta_train
torch.Size([])
mol_list.3.alpha_sc
torch.Size([1])
mol_list.3.beta_sc
torch.Size([1])
mol_list.3.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.3.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.3.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.3.multihead_att_layer.V.bias
torch.Size([32])
mol_list.3.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.3.multihead_att_layer.K.bias
torch.Size([32])
mol_list.3.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.3.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.4.alpha_train
torch.Size([])
mol_list.4.beta_train
torch.Size([])
mol_list.4.alpha_sc
torch.Size([1])
mol_list.4.beta_sc
torch.Size([1])
mol_list.4.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.4.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.4.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.4.multihead_att_layer.V.bias
torch.Size([32])
mol_list.4.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.4.multihead_att_layer.K.bias
torch.Size([32])
mol_list.4.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.4.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.5.alpha_train
torch.Size([])
mol_list.5.beta_train
torch.Size([])
mol_list.5.alpha_sc
torch.Size([1])
mol_list.5.beta_sc
torch.Size([1])
mol_list.5.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.5.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.5.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.5.multihead_att_layer.V.bias
torch.Size([32])
mol_list.5.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.5.multihead_att_layer.K.bias
torch.Size([32])
mol_list.5.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.5.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.6.alpha_train
torch.Size([])
mol_list.6.beta_train
torch.Size([])
mol_list.6.alpha_sc
torch.Size([1])
mol_list.6.beta_sc
torch.Size([1])
mol_list.6.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.6.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.6.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.6.multihead_att_layer.V.bias
torch.Size([32])
mol_list.6.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.6.multihead_att_layer.K.bias
torch.Size([32])
mol_list.6.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.6.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.7.alpha_train
torch.Size([])
mol_list.7.beta_train
torch.Size([])
mol_list.7.alpha_sc
torch.Size([1])
mol_list.7.beta_sc
torch.Size([1])
mol_list.7.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.7.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.7.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.7.multihead_att_layer.V.bias
torch.Size([32])
mol_list.7.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.7.multihead_att_layer.K.bias
torch.Size([32])
mol_list.7.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.7.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.8.alpha_train
torch.Size([])
mol_list.8.beta_train
torch.Size([])
mol_list.8.alpha_sc
torch.Size([1])
mol_list.8.beta_sc
torch.Size([1])
mol_list.8.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.8.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.8.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.8.multihead_att_layer.V.bias
torch.Size([32])
mol_list.8.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.8.multihead_att_layer.K.bias
torch.Size([32])
mol_list.8.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.8.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.9.alpha_train
torch.Size([])
mol_list.9.beta_train
torch.Size([])
mol_list.9.alpha_sc
torch.Size([1])
mol_list.9.beta_sc
torch.Size([1])
mol_list.9.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.9.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.9.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.9.multihead_att_layer.V.bias
torch.Size([32])
mol_list.9.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.9.multihead_att_layer.K.bias
torch.Size([32])
mol_list.9.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.9.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.10.alpha_train
torch.Size([])
mol_list.10.beta_train
torch.Size([])
mol_list.10.alpha_sc
torch.Size([1])
mol_list.10.beta_sc
torch.Size([1])
mol_list.10.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.10.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.10.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.10.multihead_att_layer.V.bias
torch.Size([32])
mol_list.10.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.10.multihead_att_layer.K.bias
torch.Size([32])
mol_list.10.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.10.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.11.alpha_train
torch.Size([])
mol_list.11.beta_train
torch.Size([])
mol_list.11.alpha_sc
torch.Size([1])
mol_list.11.beta_sc
torch.Size([1])
mol_list.11.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.11.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.11.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.11.multihead_att_layer.V.bias
torch.Size([32])
mol_list.11.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.11.multihead_att_layer.K.bias
torch.Size([32])
mol_list.11.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.11.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.12.alpha_train
torch.Size([])
mol_list.12.beta_train
torch.Size([])
mol_list.12.alpha_sc
torch.Size([1])
mol_list.12.beta_sc
torch.Size([1])
mol_list.12.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.12.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.12.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.12.multihead_att_layer.V.bias
torch.Size([32])
mol_list.12.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.12.multihead_att_layer.K.bias
torch.Size([32])
mol_list.12.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.12.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.13.alpha_train
torch.Size([])
mol_list.13.beta_train
torch.Size([])
mol_list.13.alpha_sc
torch.Size([1])
mol_list.13.beta_sc
torch.Size([1])
mol_list.13.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.13.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.13.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.13.multihead_att_layer.V.bias
torch.Size([32])
mol_list.13.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.13.multihead_att_layer.K.bias
torch.Size([32])
mol_list.13.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.13.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.14.alpha_train
torch.Size([])
mol_list.14.beta_train
torch.Size([])
mol_list.14.alpha_sc
torch.Size([1])
mol_list.14.beta_sc
torch.Size([1])
mol_list.14.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.14.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.14.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.14.multihead_att_layer.V.bias
torch.Size([32])
mol_list.14.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.14.multihead_att_layer.K.bias
torch.Size([32])
mol_list.14.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.14.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.15.alpha_train
torch.Size([])
mol_list.15.beta_train
torch.Size([])
mol_list.15.alpha_sc
torch.Size([1])
mol_list.15.beta_sc
torch.Size([1])
mol_list.15.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.15.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.15.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.15.multihead_att_layer.V.bias
torch.Size([32])
mol_list.15.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.15.multihead_att_layer.K.bias
torch.Size([32])
mol_list.15.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.15.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.16.alpha_train
torch.Size([])
mol_list.16.beta_train
torch.Size([])
mol_list.16.alpha_sc
torch.Size([1])
mol_list.16.beta_sc
torch.Size([1])
mol_list.16.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.16.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.16.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.16.multihead_att_layer.V.bias
torch.Size([32])
mol_list.16.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.16.multihead_att_layer.K.bias
torch.Size([32])
mol_list.16.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.16.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.17.alpha_train
torch.Size([])
mol_list.17.beta_train
torch.Size([])
mol_list.17.alpha_sc
torch.Size([1])
mol_list.17.beta_sc
torch.Size([1])
mol_list.17.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.17.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.17.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.17.multihead_att_layer.V.bias
torch.Size([32])
mol_list.17.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.17.multihead_att_layer.K.bias
torch.Size([32])
mol_list.17.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.17.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.18.alpha_train
torch.Size([])
mol_list.18.beta_train
torch.Size([])
mol_list.18.alpha_sc
torch.Size([1])
mol_list.18.beta_sc
torch.Size([1])
mol_list.18.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.18.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.18.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.18.multihead_att_layer.V.bias
torch.Size([32])
mol_list.18.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.18.multihead_att_layer.K.bias
torch.Size([32])
mol_list.18.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.18.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.19.alpha_train
torch.Size([])
mol_list.19.beta_train
torch.Size([])
mol_list.19.alpha_sc
torch.Size([1])
mol_list.19.beta_sc
torch.Size([1])
mol_list.19.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.19.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.19.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.19.multihead_att_layer.V.bias
torch.Size([32])
mol_list.19.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.19.multihead_att_layer.K.bias
torch.Size([32])
mol_list.19.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.19.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.20.alpha_train
torch.Size([])
mol_list.20.beta_train
torch.Size([])
mol_list.20.alpha_sc
torch.Size([1])
mol_list.20.beta_sc
torch.Size([1])
mol_list.20.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.20.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.20.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.20.multihead_att_layer.V.bias
torch.Size([32])
mol_list.20.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.20.multihead_att_layer.K.bias
torch.Size([32])
mol_list.20.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.20.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.21.alpha_train
torch.Size([])
mol_list.21.beta_train
torch.Size([])
mol_list.21.alpha_sc
torch.Size([1])
mol_list.21.beta_sc
torch.Size([1])
mol_list.21.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.21.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.21.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.21.multihead_att_layer.V.bias
torch.Size([32])
mol_list.21.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.21.multihead_att_layer.K.bias
torch.Size([32])
mol_list.21.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.21.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.22.alpha_train
torch.Size([])
mol_list.22.beta_train
torch.Size([])
mol_list.22.alpha_sc
torch.Size([1])
mol_list.22.beta_sc
torch.Size([1])
mol_list.22.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.22.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.22.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.22.multihead_att_layer.V.bias
torch.Size([32])
mol_list.22.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.22.multihead_att_layer.K.bias
torch.Size([32])
mol_list.22.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.22.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.23.alpha_train
torch.Size([])
mol_list.23.beta_train
torch.Size([])
mol_list.23.alpha_sc
torch.Size([1])
mol_list.23.beta_sc
torch.Size([1])
mol_list.23.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.23.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.23.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.23.multihead_att_layer.V.bias
torch.Size([32])
mol_list.23.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.23.multihead_att_layer.K.bias
torch.Size([32])
mol_list.23.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.23.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.24.alpha_train
torch.Size([])
mol_list.24.beta_train
torch.Size([])
mol_list.24.alpha_sc
torch.Size([1])
mol_list.24.beta_sc
torch.Size([1])
mol_list.24.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.24.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.24.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.24.multihead_att_layer.V.bias
torch.Size([32])
mol_list.24.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.24.multihead_att_layer.K.bias
torch.Size([32])
mol_list.24.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.24.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.25.alpha_train
torch.Size([])
mol_list.25.beta_train
torch.Size([])
mol_list.25.alpha_sc
torch.Size([1])
mol_list.25.beta_sc
torch.Size([1])
mol_list.25.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.25.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.25.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.25.multihead_att_layer.V.bias
torch.Size([32])
mol_list.25.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.25.multihead_att_layer.K.bias
torch.Size([32])
mol_list.25.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.25.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.26.alpha_train
torch.Size([])
mol_list.26.beta_train
torch.Size([])
mol_list.26.alpha_sc
torch.Size([1])
mol_list.26.beta_sc
torch.Size([1])
mol_list.26.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.26.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.26.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.26.multihead_att_layer.V.bias
torch.Size([32])
mol_list.26.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.26.multihead_att_layer.K.bias
torch.Size([32])
mol_list.26.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.26.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.27.alpha_train
torch.Size([])
mol_list.27.beta_train
torch.Size([])
mol_list.27.alpha_sc
torch.Size([1])
mol_list.27.beta_sc
torch.Size([1])
mol_list.27.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.27.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.27.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.27.multihead_att_layer.V.bias
torch.Size([32])
mol_list.27.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.27.multihead_att_layer.K.bias
torch.Size([32])
mol_list.27.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.27.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.28.alpha_train
torch.Size([])
mol_list.28.beta_train
torch.Size([])
mol_list.28.alpha_sc
torch.Size([1])
mol_list.28.beta_sc
torch.Size([1])
mol_list.28.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.28.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.28.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.28.multihead_att_layer.V.bias
torch.Size([32])
mol_list.28.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.28.multihead_att_layer.K.bias
torch.Size([32])
mol_list.28.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.28.multihead_att_layer.Wout.bias
torch.Size([80])
mol_list.29.alpha_train
torch.Size([])
mol_list.29.beta_train
torch.Size([])
mol_list.29.alpha_sc
torch.Size([1])
mol_list.29.beta_sc
torch.Size([1])
mol_list.29.multihead_att_layer.Q.weight
torch.Size([32, 80])
mol_list.29.multihead_att_layer.Q.bias
torch.Size([32])
mol_list.29.multihead_att_layer.V.weight
torch.Size([32, 80])
mol_list.29.multihead_att_layer.V.bias
torch.Size([32])
mol_list.29.multihead_att_layer.K.weight
torch.Size([32, 80])
mol_list.29.multihead_att_layer.K.bias
torch.Size([32])
mol_list.29.multihead_att_layer.Wout.weight
torch.Size([80, 4])
mol_list.29.multihead_att_layer.Wout.bias
torch.Size([80])
Epoch: 001, Runtime 1.860569, Loss 1.805430, Train: 0.2000, Val: 0.1870, Test: 0.1500, Best time: 7.8741

  6%|‚ñà‚ñå                           | 14/250 [00:04<00:46,  5.11it/s]
Epoch: 003, Runtime 0.167690, Loss 1.751673, Train: 0.5000, Val: 0.2438, Test: 0.1833, Best time: 7.8741
Epoch: 004, Runtime 0.167344, Loss 1.722122, Train: 0.6533, Val: 0.3497, Test: 0.3000, Best time: 7.8741
Epoch: 005, Runtime 0.256681, Loss 1.686589, Train: 0.7667, Val: 0.4292, Test: 0.4000, Best time: 7.8741
Epoch: 006, Runtime 0.174883, Loss 1.683515, Train: 0.8667, Val: 0.5049, Test: 0.4500, Best time: 7.8741
Epoch: 007, Runtime 0.192856, Loss 1.646111, Train: 0.9200, Val: 0.5692, Test: 0.5250, Best time: 7.8741
Epoch: 008, Runtime 0.157869, Loss 1.620932, Train: 0.9467, Val: 0.6178, Test: 0.5833, Best time: 7.8741
Epoch: 009, Runtime 0.164289, Loss 1.600578, Train: 0.9267, Val: 0.6578, Test: 0.6417, Best time: 7.8741
Epoch: 010, Runtime 0.171015, Loss 1.591612, Train: 0.9200, Val: 0.6827, Test: 0.6583, Best time: 7.8741
Epoch: 011, Runtime 0.171454, Loss 1.595621, Train: 0.9333, Val: 0.6978, Test: 0.7000, Best time: 7.8741

 10%|‚ñà‚ñà‚ñà                          | 26/250 [00:06<00:37,  5.91it/s]
Epoch: 013, Runtime 0.172374, Loss 1.513310, Train: 0.9267, Val: 0.7049, Test: 0.7417, Best time: 7.8741
Epoch: 014, Runtime 0.179626, Loss 1.498390, Train: 0.9133, Val: 0.7011, Test: 0.7500, Best time: 7.8741
Epoch: 015, Runtime 0.183336, Loss 1.504871, Train: 0.8933, Val: 0.6973, Test: 0.7333, Best time: 7.8741
Epoch: 016, Runtime 0.185858, Loss 1.499696, Train: 0.8867, Val: 0.7000, Test: 0.7250, Best time: 7.8741
Epoch: 017, Runtime 0.183581, Loss 1.446879, Train: 0.8867, Val: 0.7022, Test: 0.7083, Best time: 7.8741
Epoch: 018, Runtime 0.175788, Loss 1.440849, Train: 0.8867, Val: 0.7070, Test: 0.7250, Best time: 7.8741
Epoch: 019, Runtime 0.180899, Loss 1.447004, Train: 0.9067, Val: 0.7108, Test: 0.7083, Best time: 7.8741
Epoch: 020, Runtime 0.170094, Loss 1.387510, Train: 0.9333, Val: 0.7151, Test: 0.7167, Best time: 7.8741
Epoch: 021, Runtime 0.177062, Loss 1.356978, Train: 0.9467, Val: 0.7189, Test: 0.7083, Best time: 7.8741
Epoch: 022, Runtime 0.167053, Loss 1.335122, Train: 0.9600, Val: 0.7151, Test: 0.7000, Best time: 7.8741
Epoch: 023, Runtime 0.172384, Loss 1.328362, Train: 0.9667, Val: 0.7173, Test: 0.7000, Best time: 7.8741

 15%|‚ñà‚ñà‚ñà‚ñà‚ñé                        | 37/250 [00:08<00:36,  5.82it/s]
Epoch: 025, Runtime 0.173011, Loss 1.275031, Train: 0.9733, Val: 0.7227, Test: 0.7000, Best time: 7.8741
Epoch: 026, Runtime 0.155076, Loss 1.220157, Train: 0.9733, Val: 0.7195, Test: 0.6917, Best time: 7.8741
Epoch: 027, Runtime 0.167643, Loss 1.239946, Train: 0.9733, Val: 0.7195, Test: 0.7000, Best time: 7.8741
Epoch: 028, Runtime 0.174558, Loss 1.183845, Train: 0.9733, Val: 0.7189, Test: 0.7167, Best time: 7.8741
Epoch: 029, Runtime 0.159043, Loss 1.177416, Train: 0.9867, Val: 0.7135, Test: 0.7000, Best time: 7.8741
Epoch: 030, Runtime 0.153692, Loss 1.113888, Train: 0.9867, Val: 0.7103, Test: 0.7000, Best time: 7.8741
Epoch: 031, Runtime 0.165142, Loss 1.112846, Train: 0.9800, Val: 0.7005, Test: 0.6917, Best time: 7.8741
Epoch: 032, Runtime 0.155285, Loss 1.079860, Train: 0.9800, Val: 0.6973, Test: 0.6833, Best time: 7.8741
Epoch: 033, Runtime 0.154671, Loss 1.137693, Train: 0.9733, Val: 0.6935, Test: 0.6750, Best time: 7.8741
Epoch: 034, Runtime 0.169434, Loss 1.038569, Train: 0.9733, Val: 0.6886, Test: 0.6833, Best time: 7.8741
Epoch: 035, Runtime 0.182620, Loss 1.093907, Train: 0.9733, Val: 0.6892, Test: 0.7083, Best time: 7.8741

 19%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç                       | 47/250 [00:10<00:40,  5.01it/s]
Epoch: 037, Runtime 0.168710, Loss 1.051316, Train: 0.9667, Val: 0.7049, Test: 0.7167, Best time: 7.8741
Epoch: 038, Runtime 0.239268, Loss 1.054321, Train: 0.9667, Val: 0.7059, Test: 0.7083, Best time: 7.8741
Epoch: 039, Runtime 0.210984, Loss 1.079442, Train: 0.9667, Val: 0.7092, Test: 0.7167, Best time: 7.8741
Epoch: 040, Runtime 0.174464, Loss 0.945777, Train: 0.9800, Val: 0.7097, Test: 0.7167, Best time: 7.8741
Epoch: 041, Runtime 0.178795, Loss 1.086050, Train: 0.9867, Val: 0.7092, Test: 0.7417, Best time: 7.8741
Epoch: 042, Runtime 0.168653, Loss 0.963976, Train: 0.9867, Val: 0.7022, Test: 0.7250, Best time: 7.8741
Epoch: 043, Runtime 0.165881, Loss 1.034892, Train: 0.9933, Val: 0.6935, Test: 0.6917, Best time: 7.8741
Epoch: 044, Runtime 0.168845, Loss 0.974550, Train: 0.9933, Val: 0.6886, Test: 0.6583, Best time: 7.8741
Epoch: 045, Runtime 0.166890, Loss 1.016729, Train: 0.9933, Val: 0.6919, Test: 0.6417, Best time: 7.8741

 22%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç                      | 55/250 [00:11<00:35,  5.49it/s]
Epoch: 047, Runtime 0.245575, Loss 1.004636, Train: 0.9867, Val: 0.7108, Test: 0.6750, Best time: 7.8741
Epoch: 048, Runtime 0.292669, Loss 1.038258, Train: 0.9867, Val: 0.7135, Test: 0.6917, Best time: 7.8741
Epoch: 049, Runtime 0.262280, Loss 1.030331, Train: 0.9800, Val: 0.7184, Test: 0.7167, Best time: 7.8741
Epoch: 050, Runtime 0.179016, Loss 1.007296, Train: 0.9800, Val: 0.7184, Test: 0.7250, Best time: 7.8741
Epoch: 051, Runtime 0.180514, Loss 1.052255, Train: 0.9733, Val: 0.7184, Test: 0.7000, Best time: 7.8741
Epoch: 052, Runtime 0.178018, Loss 1.015086, Train: 0.9800, Val: 0.7178, Test: 0.7083, Best time: 7.8741
Epoch: 053, Runtime 0.169636, Loss 1.024710, Train: 0.9800, Val: 0.7130, Test: 0.6917, Best time: 7.8741
Epoch: 054, Runtime 0.174128, Loss 0.963961, Train: 0.9800, Val: 0.7005, Test: 0.6833, Best time: 7.8741
Epoch: 055, Runtime 0.169709, Loss 0.901640, Train: 0.9800, Val: 0.6941, Test: 0.6833, Best time: 7.8741
Epoch: 056, Runtime 0.173979, Loss 0.985241, Train: 0.9800, Val: 0.6951, Test: 0.6917, Best time: 7.8741

 26%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã                     | 66/250 [00:13<00:33,  5.47it/s]
Epoch: 058, Runtime 0.228040, Loss 0.954587, Train: 0.9933, Val: 0.6876, Test: 0.7000, Best time: 7.8741
Epoch: 059, Runtime 0.195284, Loss 0.879946, Train: 0.9933, Val: 0.6859, Test: 0.6833, Best time: 7.8741
Epoch: 060, Runtime 0.176489, Loss 0.897226, Train: 0.9867, Val: 0.6865, Test: 0.6917, Best time: 7.8741
Epoch: 061, Runtime 0.190901, Loss 0.985979, Train: 0.9867, Val: 0.6876, Test: 0.7083, Best time: 7.8741
Epoch: 062, Runtime 0.190666, Loss 0.919397, Train: 0.9867, Val: 0.6897, Test: 0.7000, Best time: 7.8741
Epoch: 063, Runtime 0.178249, Loss 1.058198, Train: 0.9867, Val: 0.6995, Test: 0.6917, Best time: 7.8741
Epoch: 064, Runtime 0.173959, Loss 0.917947, Train: 0.9800, Val: 0.7135, Test: 0.7167, Best time: 7.8741
Epoch: 065, Runtime 0.188710, Loss 0.953478, Train: 0.9800, Val: 0.7184, Test: 0.7250, Best time: 7.8741
Epoch: 066, Runtime 0.175843, Loss 0.898572, Train: 0.9733, Val: 0.7227, Test: 0.7417, Best time: 7.8741

 31%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ                    | 77/250 [00:15<00:32,  5.30it/s]
Epoch: 068, Runtime 0.189333, Loss 1.001625, Train: 0.9733, Val: 0.7238, Test: 0.7333, Best time: 7.8741
Epoch: 069, Runtime 0.180690, Loss 0.930098, Train: 0.9800, Val: 0.7249, Test: 0.7333, Best time: 7.8741
Epoch: 070, Runtime 0.198557, Loss 0.991931, Train: 0.9800, Val: 0.7232, Test: 0.7083, Best time: 7.8741
Epoch: 071, Runtime 0.187041, Loss 1.079966, Train: 0.9867, Val: 0.7211, Test: 0.7000, Best time: 7.8741
Epoch: 072, Runtime 0.186996, Loss 0.982993, Train: 0.9867, Val: 0.7119, Test: 0.7083, Best time: 7.8741
Epoch: 073, Runtime 0.197139, Loss 0.990959, Train: 0.9867, Val: 0.6995, Test: 0.7083, Best time: 7.8741
Epoch: 074, Runtime 0.188548, Loss 0.943885, Train: 0.9867, Val: 0.6957, Test: 0.7000, Best time: 7.8741
Epoch: 075, Runtime 0.177718, Loss 0.947491, Train: 0.9867, Val: 0.6989, Test: 0.7000, Best time: 7.8741
Epoch: 076, Runtime 0.194029, Loss 0.968218, Train: 0.9867, Val: 0.7043, Test: 0.7167, Best time: 7.8741
Epoch: 077, Runtime 0.184964, Loss 1.002408, Train: 0.9867, Val: 0.7038, Test: 0.7250, Best time: 7.8741

 35%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                   | 87/250 [00:17<00:34,  4.76it/s]
Epoch: 079, Runtime 0.183624, Loss 1.018064, Train: 0.9867, Val: 0.7178, Test: 0.7750, Best time: 7.8741
Epoch: 080, Runtime 0.189646, Loss 1.001796, Train: 0.9800, Val: 0.7200, Test: 0.7667, Best time: 7.8741
Epoch: 081, Runtime 0.192348, Loss 1.066478, Train: 0.9800, Val: 0.7249, Test: 0.7667, Best time: 7.8741
Epoch: 082, Runtime 0.178169, Loss 0.922740, Train: 0.9800, Val: 0.7265, Test: 0.7500, Best time: 7.8741
Epoch: 083, Runtime 0.189094, Loss 1.073175, Train: 0.9800, Val: 0.7151, Test: 0.7333, Best time: 7.8741
Epoch: 084, Runtime 0.182390, Loss 1.012844, Train: 0.9800, Val: 0.7151, Test: 0.7333, Best time: 7.8741
Epoch: 085, Runtime 0.192406, Loss 1.047390, Train: 0.9867, Val: 0.7184, Test: 0.7250, Best time: 7.8741
Epoch: 086, Runtime 0.178413, Loss 1.006355, Train: 0.9867, Val: 0.7162, Test: 0.7167, Best time: 7.8741
Epoch: 087, Runtime 0.260592, Loss 1.070989, Train: 0.9867, Val: 0.7189, Test: 0.7083, Best time: 7.8741

 38%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè                 | 96/250 [00:19<00:33,  4.62it/s]
Epoch: 089, Runtime 0.187506, Loss 1.024231, Train: 0.9800, Val: 0.7049, Test: 0.7417, Best time: 7.8741
Epoch: 090, Runtime 0.175144, Loss 1.069688, Train: 0.9800, Val: 0.7016, Test: 0.7250, Best time: 7.8741
Epoch: 091, Runtime 0.195069, Loss 0.978185, Train: 0.9733, Val: 0.7005, Test: 0.7250, Best time: 7.8741
Epoch: 092, Runtime 0.226718, Loss 1.039245, Train: 0.9733, Val: 0.7016, Test: 0.7167, Best time: 7.8741
Epoch: 093, Runtime 0.298848, Loss 1.080761, Train: 0.9733, Val: 0.6973, Test: 0.7083, Best time: 7.8741
Epoch: 094, Runtime 0.259809, Loss 1.093361, Train: 0.9667, Val: 0.7000, Test: 0.7167, Best time: 7.8741
Epoch: 095, Runtime 0.188950, Loss 1.081405, Train: 0.9733, Val: 0.6973, Test: 0.7083, Best time: 7.8741
Epoch: 096, Runtime 0.183463, Loss 1.045988, Train: 0.9733, Val: 0.7027, Test: 0.7083, Best time: 7.8741

 43%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ                | 107/250 [00:21<00:24,  5.88it/s]
Epoch: 098, Runtime 0.255540, Loss 1.010554, Train: 0.9733, Val: 0.7065, Test: 0.7167, Best time: 7.8741
Epoch: 099, Runtime 0.180797, Loss 1.081669, Train: 0.9800, Val: 0.7038, Test: 0.7167, Best time: 7.8741
Epoch: 100, Runtime 0.215818, Loss 1.064010, Train: 0.9800, Val: 0.6995, Test: 0.7167, Best time: 7.8741
Epoch: 101, Runtime 0.175856, Loss 1.044841, Train: 0.9800, Val: 0.6946, Test: 0.7167, Best time: 7.8741
Epoch: 102, Runtime 0.195873, Loss 1.024379, Train: 0.9800, Val: 0.6876, Test: 0.7333, Best time: 7.8741
Epoch: 103, Runtime 0.181514, Loss 1.065631, Train: 0.9733, Val: 0.6805, Test: 0.7333, Best time: 7.8741
Epoch: 104, Runtime 0.164753, Loss 1.091153, Train: 0.9800, Val: 0.6962, Test: 0.7250, Best time: 7.8741
Epoch: 105, Runtime 0.162976, Loss 1.032397, Train: 0.9800, Val: 0.7043, Test: 0.7167, Best time: 7.8741
Epoch: 106, Runtime 0.160944, Loss 1.109359, Train: 0.9800, Val: 0.7141, Test: 0.7250, Best time: 7.8741
Epoch: 107, Runtime 0.160010, Loss 1.015886, Train: 0.9800, Val: 0.7184, Test: 0.7417, Best time: 7.8741

 47%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè              | 118/250 [00:23<00:24,  5.46it/s]
Epoch: 109, Runtime 0.197994, Loss 1.044472, Train: 0.9800, Val: 0.7205, Test: 0.7250, Best time: 7.8741
Epoch: 110, Runtime 0.191636, Loss 1.098956, Train: 0.9867, Val: 0.7205, Test: 0.7250, Best time: 7.8741
Epoch: 111, Runtime 0.204644, Loss 1.159709, Train: 0.9867, Val: 0.7178, Test: 0.7333, Best time: 7.8741
Epoch: 112, Runtime 0.196132, Loss 1.056990, Train: 0.9867, Val: 0.7092, Test: 0.7167, Best time: 7.8741
Epoch: 113, Runtime 0.181168, Loss 1.000707, Train: 0.9867, Val: 0.7076, Test: 0.6917, Best time: 7.8741
Epoch: 114, Runtime 0.184033, Loss 1.001729, Train: 0.9867, Val: 0.7092, Test: 0.6750, Best time: 7.8741
Epoch: 115, Runtime 0.167216, Loss 1.085514, Train: 0.9800, Val: 0.7043, Test: 0.6917, Best time: 7.8741
Epoch: 116, Runtime 0.181479, Loss 1.120278, Train: 0.9800, Val: 0.7016, Test: 0.6833, Best time: 7.8741
Epoch: 117, Runtime 0.177944, Loss 1.094977, Train: 0.9800, Val: 0.7032, Test: 0.6667, Best time: 7.8741
Epoch: 118, Runtime 0.186367, Loss 1.057900, Train: 0.9667, Val: 0.7086, Test: 0.6667, Best time: 7.8741

 51%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè             | 127/250 [00:25<00:28,  4.36it/s]
Epoch: 120, Runtime 0.253648, Loss 1.066054, Train: 0.9800, Val: 0.7162, Test: 0.6917, Best time: 7.8741
Epoch: 121, Runtime 0.219783, Loss 1.055427, Train: 0.9867, Val: 0.7173, Test: 0.6917, Best time: 7.8741
Epoch: 122, Runtime 0.228832, Loss 1.037954, Train: 0.9867, Val: 0.7151, Test: 0.7083, Best time: 7.8741
Epoch: 123, Runtime 0.218898, Loss 1.102426, Train: 0.9867, Val: 0.7173, Test: 0.6750, Best time: 7.8741
Epoch: 124, Runtime 0.225379, Loss 1.043222, Train: 0.9867, Val: 0.7259, Test: 0.6833, Best time: 7.8741
Epoch: 125, Runtime 0.218137, Loss 1.074633, Train: 0.9867, Val: 0.7184, Test: 0.6833, Best time: 7.8741
Epoch: 126, Runtime 0.252280, Loss 1.075266, Train: 0.9867, Val: 0.7189, Test: 0.6917, Best time: 7.8741

 54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà             | 134/250 [00:27<00:31,  3.65it/s]
Epoch: 128, Runtime 0.235842, Loss 1.074854, Train: 0.9867, Val: 0.7011, Test: 0.7083, Best time: 7.8741
Epoch: 129, Runtime 0.248589, Loss 1.011509, Train: 0.9800, Val: 0.6919, Test: 0.7167, Best time: 7.8741
Epoch: 130, Runtime 0.224799, Loss 1.101152, Train: 0.9800, Val: 0.6859, Test: 0.6917, Best time: 7.8741
Epoch: 131, Runtime 0.232865, Loss 1.023648, Train: 0.9800, Val: 0.6859, Test: 0.7000, Best time: 7.8741
Epoch: 132, Runtime 0.293155, Loss 1.058672, Train: 0.9800, Val: 0.6849, Test: 0.7000, Best time: 7.8741
Epoch: 133, Runtime 0.333704, Loss 1.120988, Train: 0.9800, Val: 0.6962, Test: 0.7083, Best time: 7.8741
Epoch: 134, Runtime 0.245677, Loss 1.012954, Train: 0.9800, Val: 0.7081, Test: 0.7250, Best time: 7.8741

 57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà            | 143/250 [00:29<00:23,  4.52it/s]
Epoch: 136, Runtime 0.214479, Loss 1.140732, Train: 0.9867, Val: 0.7151, Test: 0.7250, Best time: 7.8741
Epoch: 137, Runtime 0.249570, Loss 0.951944, Train: 0.9867, Val: 0.7130, Test: 0.7167, Best time: 7.8741
Epoch: 138, Runtime 0.248547, Loss 1.039225, Train: 0.9867, Val: 0.7086, Test: 0.7083, Best time: 7.8741
Epoch: 139, Runtime 0.219052, Loss 1.055539, Train: 0.9933, Val: 0.7086, Test: 0.7083, Best time: 7.8741
Epoch: 140, Runtime 0.252477, Loss 1.076954, Train: 0.9933, Val: 0.6935, Test: 0.7417, Best time: 7.8741
Epoch: 141, Runtime 0.194159, Loss 1.051403, Train: 0.9867, Val: 0.6881, Test: 0.7167, Best time: 7.8741
Epoch: 142, Runtime 0.232925, Loss 1.102259, Train: 0.9867, Val: 0.6784, Test: 0.7083, Best time: 7.8741
Epoch: 143, Runtime 0.197335, Loss 1.011261, Train: 0.9800, Val: 0.6730, Test: 0.7083, Best time: 7.8741

 60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ           | 151/250 [00:31<00:25,  3.96it/s]
Epoch: 145, Runtime 0.194587, Loss 1.100766, Train: 0.9867, Val: 0.6741, Test: 0.7000, Best time: 7.8741
Epoch: 146, Runtime 0.228605, Loss 1.045520, Train: 0.9867, Val: 0.6892, Test: 0.7250, Best time: 7.8741
Epoch: 147, Runtime 0.250692, Loss 1.022445, Train: 0.9800, Val: 0.7005, Test: 0.7333, Best time: 7.8741
Epoch: 148, Runtime 0.316729, Loss 1.103633, Train: 0.9867, Val: 0.7054, Test: 0.7250, Best time: 7.8741
Epoch: 149, Runtime 0.227585, Loss 1.040254, Train: 0.9867, Val: 0.7038, Test: 0.7250, Best time: 7.8741
Epoch: 150, Runtime 0.250241, Loss 1.018790, Train: 0.9867, Val: 0.7141, Test: 0.7083, Best time: 7.8741
Epoch: 151, Runtime 0.257113, Loss 1.078832, Train: 0.9733, Val: 0.7168, Test: 0.7167, Best time: 7.8741

 64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ          | 160/250 [00:34<00:21,  4.24it/s]
Epoch: 153, Runtime 0.236949, Loss 1.054604, Train: 0.9733, Val: 0.7168, Test: 0.7333, Best time: 7.8741
Epoch: 154, Runtime 0.259882, Loss 0.955356, Train: 0.9867, Val: 0.7146, Test: 0.7250, Best time: 7.8741
Epoch: 155, Runtime 0.251052, Loss 1.012191, Train: 0.9933, Val: 0.7081, Test: 0.7167, Best time: 7.8741
Epoch: 156, Runtime 0.242259, Loss 0.983443, Train: 0.9933, Val: 0.7049, Test: 0.7083, Best time: 7.8741
Epoch: 157, Runtime 0.211448, Loss 1.022705, Train: 0.9933, Val: 0.7016, Test: 0.7083, Best time: 7.8741
Epoch: 158, Runtime 0.237662, Loss 1.051743, Train: 0.9867, Val: 0.6968, Test: 0.7167, Best time: 7.8741
Epoch: 159, Runtime 0.193756, Loss 1.057700, Train: 0.9867, Val: 0.6968, Test: 0.7000, Best time: 7.8741
Epoch: 160, Runtime 0.261138, Loss 1.079839, Train: 0.9867, Val: 0.6935, Test: 0.6750, Best time: 7.8741

 68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ         | 169/250 [00:36<00:18,  4.32it/s]
Epoch: 162, Runtime 0.219947, Loss 1.040025, Train: 0.9867, Val: 0.6957, Test: 0.6917, Best time: 7.8741
Epoch: 163, Runtime 0.207078, Loss 0.949374, Train: 0.9800, Val: 0.7103, Test: 0.7250, Best time: 7.8741
Epoch: 164, Runtime 0.229756, Loss 1.012878, Train: 0.9800, Val: 0.7173, Test: 0.7333, Best time: 7.8741
Epoch: 165, Runtime 0.221583, Loss 1.026200, Train: 0.9667, Val: 0.7222, Test: 0.7500, Best time: 7.8741
Epoch: 166, Runtime 0.214088, Loss 1.052186, Train: 0.9733, Val: 0.7281, Test: 0.7500, Best time: 7.8741
Epoch: 167, Runtime 0.203892, Loss 1.051384, Train: 0.9733, Val: 0.7319, Test: 0.7500, Best time: 7.8741
Epoch: 168, Runtime 0.244382, Loss 1.031582, Train: 0.9733, Val: 0.7303, Test: 0.7500, Best time: 7.8741
Epoch: 169, Runtime 0.245691, Loss 1.049252, Train: 0.9733, Val: 0.7297, Test: 0.7333, Best time: 7.8741

 71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä        | 177/250 [00:37<00:16,  4.38it/s]
Epoch: 171, Runtime 0.251999, Loss 1.015295, Train: 0.9800, Val: 0.7259, Test: 0.7417, Best time: 7.8741
Epoch: 172, Runtime 0.220928, Loss 1.012738, Train: 0.9867, Val: 0.7146, Test: 0.7333, Best time: 7.8741
Epoch: 173, Runtime 0.239185, Loss 1.009969, Train: 0.9867, Val: 0.7059, Test: 0.7333, Best time: 7.8741
Epoch: 174, Runtime 0.192119, Loss 1.052842, Train: 0.9800, Val: 0.7049, Test: 0.7167, Best time: 7.8741
Epoch: 175, Runtime 0.244369, Loss 1.107660, Train: 0.9733, Val: 0.6984, Test: 0.7250, Best time: 7.8741
Epoch: 176, Runtime 0.236849, Loss 1.011690, Train: 0.9733, Val: 0.7059, Test: 0.7167, Best time: 7.8741
Epoch: 177, Runtime 0.218541, Loss 1.070958, Train: 0.9600, Val: 0.7032, Test: 0.7167, Best time: 7.8741

 74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä       | 186/250 [00:39<00:14,  4.29it/s]
Epoch: 179, Runtime 0.220600, Loss 1.014677, Train: 0.9667, Val: 0.7011, Test: 0.6917, Best time: 7.8741
Epoch: 180, Runtime 0.258316, Loss 1.082219, Train: 0.9667, Val: 0.7022, Test: 0.7000, Best time: 7.8741
Epoch: 181, Runtime 0.243407, Loss 1.081697, Train: 0.9667, Val: 0.7032, Test: 0.7167, Best time: 7.8741
Epoch: 182, Runtime 0.228454, Loss 1.104566, Train: 0.9733, Val: 0.7092, Test: 0.7167, Best time: 7.8741
Epoch: 183, Runtime 0.253644, Loss 1.013462, Train: 0.9667, Val: 0.7097, Test: 0.7167, Best time: 7.8741
Epoch: 184, Runtime 0.216195, Loss 1.077786, Train: 0.9800, Val: 0.7092, Test: 0.7333, Best time: 7.8741
Epoch: 185, Runtime 0.244694, Loss 1.040418, Train: 0.9800, Val: 0.7103, Test: 0.7250, Best time: 7.8741
Epoch: 186, Runtime 0.219562, Loss 1.048553, Train: 0.9800, Val: 0.7059, Test: 0.7250, Best time: 7.8741

 78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä      | 195/250 [00:42<00:12,  4.44it/s]
Epoch: 188, Runtime 0.217341, Loss 1.043020, Train: 0.9800, Val: 0.6919, Test: 0.7167, Best time: 7.8741
Epoch: 189, Runtime 0.245005, Loss 1.080110, Train: 0.9800, Val: 0.6897, Test: 0.7083, Best time: 7.8741
Epoch: 190, Runtime 0.254047, Loss 1.063946, Train: 0.9733, Val: 0.6903, Test: 0.7083, Best time: 7.8741
Epoch: 191, Runtime 0.194015, Loss 1.033414, Train: 0.9800, Val: 0.6876, Test: 0.7250, Best time: 7.8741
Epoch: 192, Runtime 0.238920, Loss 1.073020, Train: 0.9800, Val: 0.6989, Test: 0.7167, Best time: 7.8741
Epoch: 193, Runtime 0.209980, Loss 1.107434, Train: 0.9800, Val: 0.7070, Test: 0.7083, Best time: 7.8741
Epoch: 194, Runtime 0.241319, Loss 1.104462, Train: 0.9733, Val: 0.7135, Test: 0.7250, Best time: 7.8741
Epoch: 195, Runtime 0.212225, Loss 0.965869, Train: 0.9733, Val: 0.7200, Test: 0.7417, Best time: 7.8741

 81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã     | 203/250 [00:43<00:11,  4.17it/s]
Epoch: 197, Runtime 0.205766, Loss 1.026736, Train: 0.9667, Val: 0.7389, Test: 0.7500, Best time: 7.8741
Epoch: 198, Runtime 0.238424, Loss 1.046095, Train: 0.9667, Val: 0.7378, Test: 0.7417, Best time: 7.8741
Epoch: 199, Runtime 0.217361, Loss 1.040045, Train: 0.9667, Val: 0.7357, Test: 0.7167, Best time: 7.8741
Epoch: 200, Runtime 0.246681, Loss 1.048501, Train: 0.9733, Val: 0.7297, Test: 0.7083, Best time: 7.8741
Epoch: 201, Runtime 0.230784, Loss 1.022624, Train: 0.9800, Val: 0.7254, Test: 0.7000, Best time: 7.8741
Epoch: 202, Runtime 0.245595, Loss 1.031707, Train: 0.9800, Val: 0.7265, Test: 0.7000, Best time: 7.8741
Epoch: 203, Runtime 0.246298, Loss 1.051839, Train: 0.9800, Val: 0.7151, Test: 0.7333, Best time: 7.8741

 85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 212/250 [00:46<00:08,  4.27it/s]
Epoch: 205, Runtime 0.246346, Loss 1.057530, Train: 0.9867, Val: 0.7038, Test: 0.7333, Best time: 7.8741
Epoch: 206, Runtime 0.235281, Loss 0.964319, Train: 0.9800, Val: 0.7032, Test: 0.7500, Best time: 7.8741
Epoch: 207, Runtime 0.245516, Loss 1.042893, Train: 0.9800, Val: 0.7141, Test: 0.7583, Best time: 7.8741
Epoch: 208, Runtime 0.241799, Loss 1.020195, Train: 0.9800, Val: 0.7146, Test: 0.7417, Best time: 7.8741
Epoch: 209, Runtime 0.224343, Loss 0.996789, Train: 0.9800, Val: 0.7130, Test: 0.7417, Best time: 7.8741
Epoch: 210, Runtime 0.239386, Loss 1.066171, Train: 0.9867, Val: 0.7151, Test: 0.7417, Best time: 7.8741
Epoch: 211, Runtime 0.200863, Loss 1.014931, Train: 0.9867, Val: 0.7157, Test: 0.7250, Best time: 7.8741
Epoch: 212, Runtime 0.249372, Loss 1.018719, Train: 0.9933, Val: 0.7151, Test: 0.7250, Best time: 7.8741

 88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 221/250 [00:48<00:06,  4.38it/s]
Epoch: 214, Runtime 0.219285, Loss 1.032156, Train: 0.9933, Val: 0.7065, Test: 0.7333, Best time: 7.8741
Epoch: 215, Runtime 0.228078, Loss 1.057680, Train: 0.9933, Val: 0.7022, Test: 0.7083, Best time: 7.8741
Epoch: 216, Runtime 0.219877, Loss 1.031974, Train: 0.9933, Val: 0.7000, Test: 0.6917, Best time: 7.8741
Epoch: 217, Runtime 0.215384, Loss 1.067638, Train: 0.9933, Val: 0.7005, Test: 0.7000, Best time: 7.8741
Epoch: 218, Runtime 0.247511, Loss 1.113825, Train: 0.9933, Val: 0.6951, Test: 0.6833, Best time: 7.8741
Epoch: 219, Runtime 0.191523, Loss 1.020086, Train: 0.9867, Val: 0.6908, Test: 0.6917, Best time: 7.8741
Epoch: 220, Runtime 0.245881, Loss 1.048431, Train: 0.9867, Val: 0.6919, Test: 0.7000, Best time: 7.8741
Epoch: 221, Runtime 0.229189, Loss 1.046595, Train: 0.9867, Val: 0.6935, Test: 0.7000, Best time: 7.8741

 92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 229/250 [00:50<00:05,  4.15it/s]
Epoch: 223, Runtime 0.255275, Loss 1.119450, Train: 0.9800, Val: 0.6962, Test: 0.7167, Best time: 7.8741
Epoch: 224, Runtime 0.228321, Loss 1.047498, Train: 0.9733, Val: 0.7076, Test: 0.7250, Best time: 7.8741
Epoch: 225, Runtime 0.270687, Loss 1.063432, Train: 0.9733, Val: 0.7162, Test: 0.7333, Best time: 7.8741
Epoch: 226, Runtime 0.245854, Loss 1.049878, Train: 0.9667, Val: 0.7189, Test: 0.7333, Best time: 7.8741
Epoch: 227, Runtime 0.266175, Loss 1.059446, Train: 0.9667, Val: 0.7211, Test: 0.7333, Best time: 7.8741
Epoch: 228, Runtime 0.248282, Loss 1.060933, Train: 0.9600, Val: 0.7211, Test: 0.7333, Best time: 7.8741
Epoch: 229, Runtime 0.214764, Loss 1.068760, Train: 0.9600, Val: 0.7216, Test: 0.7250, Best time: 7.8741

 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 237/250 [00:51<00:03,  3.97it/s]
Epoch: 231, Runtime 0.205464, Loss 1.126156, Train: 0.9667, Val: 0.7146, Test: 0.7167, Best time: 7.8741
Epoch: 232, Runtime 0.244904, Loss 1.097937, Train: 0.9733, Val: 0.7119, Test: 0.7167, Best time: 7.8741
Epoch: 233, Runtime 0.195899, Loss 1.063351, Train: 0.9733, Val: 0.7011, Test: 0.7333, Best time: 7.8741
Epoch: 234, Runtime 0.209711, Loss 1.125420, Train: 0.9800, Val: 0.6946, Test: 0.7333, Best time: 7.8741
Epoch: 235, Runtime 0.215871, Loss 1.053248, Train: 0.9800, Val: 0.6892, Test: 0.7250, Best time: 7.8741
Epoch: 236, Runtime 0.255844, Loss 1.058934, Train: 0.9800, Val: 0.6822, Test: 0.7167, Best time: 7.8741
Epoch: 237, Runtime 0.302461, Loss 1.088400, Train: 0.9800, Val: 0.6827, Test: 0.7167, Best time: 7.8741

 99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 247/250 [00:53<00:00,  4.87it/s]
Epoch: 239, Runtime 0.249878, Loss 1.055729, Train: 0.9867, Val: 0.6751, Test: 0.7250, Best time: 7.8741
Epoch: 240, Runtime 0.201790, Loss 1.078460, Train: 0.9867, Val: 0.6805, Test: 0.7250, Best time: 7.8741
Epoch: 241, Runtime 0.186550, Loss 1.005521, Train: 0.9867, Val: 0.6849, Test: 0.7083, Best time: 7.8741
Epoch: 242, Runtime 0.188329, Loss 1.031133, Train: 0.9867, Val: 0.6978, Test: 0.7083, Best time: 7.8741
Epoch: 243, Runtime 0.200029, Loss 1.064589, Train: 0.9867, Val: 0.7011, Test: 0.7167, Best time: 7.8741
Epoch: 244, Runtime 0.189636, Loss 1.079114, Train: 0.9933, Val: 0.7059, Test: 0.7250, Best time: 7.8741
Epoch: 245, Runtime 0.199106, Loss 0.993682, Train: 0.9933, Val: 0.7081, Test: 0.7417, Best time: 7.8741
Epoch: 246, Runtime 0.202504, Loss 1.081939, Train: 0.9933, Val: 0.7130, Test: 0.7333, Best time: 7.8741
Epoch: 247, Runtime 0.211403, Loss 1.111804, Train: 0.9933, Val: 0.7119, Test: 0.7333, Best time: 7.8741
Epoch: 248, Runtime 0.211703, Loss 1.053797, Train: 0.9933, Val: 0.7086, Test: 0.7250, Best time: 7.8741
Epoch: 249, Runtime 0.202046, Loss 1.066162, Train: 0.9933, Val: 0.7086, Test: 0.7167, Best time: 7.8741
Epoch: 250, Runtime 0.201746, Loss 1.036459, Train: 1.0000, Val: 0.6989, Test: 0.7083, Best time: 7.8741

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 250/250 [00:54<00:00,  4.58it/s]