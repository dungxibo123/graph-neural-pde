Traceback (most recent call last):
  File "/home/cuongnq1/graph-neural-pde/src/run_grand_ex.py", line 427, in <module>
    main(opt)
  File "/home/cuongnq1/graph-neural-pde/src/run_grand_ex.py", line 215, in main
    data = dataset.data.to(device)
  File "/home/cuongnq1/anaconda3/envs/grand/lib/python3.9/site-packages/torch_geometric/data/data.py", line 216, in to
    return self.apply(
  File "/home/cuongnq1/anaconda3/envs/grand/lib/python3.9/site-packages/torch_geometric/data/data.py", line 199, in apply
    store.apply(func, *args)
  File "/home/cuongnq1/anaconda3/envs/grand/lib/python3.9/site-packages/torch_geometric/data/storage.py", line 148, in apply
    self[key] = recursive_apply(value, func)
  File "/home/cuongnq1/anaconda3/envs/grand/lib/python3.9/site-packages/torch_geometric/data/storage.py", line 498, in recursive_apply
    return func(data)
  File "/home/cuongnq1/anaconda3/envs/grand/lib/python3.9/site-packages/torch_geometric/data/data.py", line 217, in <lambda>
    lambda x: x.to(device=device, non_blocking=non_blocking), *args)
RuntimeError: CUDA out of memory. Tried to allocate 30.00 MiB (GPU 0; 22.20 GiB total capacity; 80.54 MiB already allocated; 8.06 MiB free; 82.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF